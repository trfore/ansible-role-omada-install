[tox]
minversion = 4.0.0
envlist =
    lint
    py-ansible{2.16}-ubuntu20-{jre8}
    py-ansible{2.17}-{centos9,debian11,ubuntu20,ubuntu22}-{default,root}
    py-ansible{2.17}-{ubuntu22}-{cluster}

[testenv]
description =
    cluster: Test creating an Omada cluster
    default: Test creating a single Omada controller
    jre8: Test creating a single Omada controller on Ubuntu 20.04 using JRE 8
    root: Test creating a single Omada controller running as root
deps =
    ansible2.16: ansible-core == 2.16.*
    ansible2.17: ansible-core == 2.17.*
    -r ./requirements/dev-requirements.txt
commands =
    cluster: molecule {posargs:test -s cluster}
    default: molecule {posargs:test -s default}
    jre8: molecule {posargs:test -s ubuntu-jre8}
    root: molecule {posargs:test -s root-user}
setenv =
    ANSIBLE_COLLECTIONS_PATH={work_dir}/{env_name}/.ansible/collections/ansible_collections
    ANSIBLE_ROLES_PATH={work_dir}/{env_name}/.ansible/roles
    MOLECULE_EPHEMERAL_DIRECTORY={work_dir}/{env_name}/.cache/molecule
    MOLECULE_NAME={env_name}
    centos9: MOLECULE_IMAGE=trfore/docker-centos9-systemd
    debian11: MOLECULE_IMAGE=trfore/docker-debian11-systemd
    ubuntu20: MOLECULE_IMAGE=trfore/docker-ubuntu2004-systemd
    ubuntu22: MOLECULE_IMAGE=trfore/docker-ubuntu2204-systemd
    PY_COLORS=1
    TOX_ENVNAME={env_name}
passenv =
    DOCKER_HOST
    MOLECULE_IMAGE

[testenv:lint]
description = Run all linting tasks
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run {posargs:--all --show-diff-on-failure}
setenv =
    TOX_ENVNAME={env_name}
